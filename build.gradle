/*
 * Copyright 2024 Oracle and/or its affiliates
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     https://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id("com.github.johnrengelman.shadow")
    id("cloud.graal.gcn.gcn-bom") 
    id("io.micronaut.application")
    id("io.micronaut.test-resources")
}

version = "1.0-SNAPSHOT"
group = "com.aman"

repositories {
    mavenCentral()
    
    maven { url "https://maven.oracle.com/public" }
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    micronautBoms(platform("cloud.graal.gcn:gcn-bom:4.2.1.3"))
    implementation("io.micronaut:micronaut-http-client")
//    implementation("org.eclipse.jetty:jetty-reactive-httpclient:4.0.3")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.discovery:micronaut-discovery-client")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3-http-client")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("mysql:mysql-connector-java")
//    implementation("org.eclipse.jetty:jetty-client:12.0.8")
}


application {
    mainClass.set("com.aman.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false
micronaut {
//        graal {
//            enabled = true
//        }
    testRuntime("netty")
    processing {    runtime("netty")

        incremental(true)
        annotations("com.aman.*")
    }
}



